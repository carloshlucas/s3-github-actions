name: Terraform Deployment

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - dev
          - prod
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - apply
      apply_approval:
        description: 'Approval for apply action'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tfplan_path: ${{ steps.upload.outputs.artifact-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        env:
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}"

      - name: Terraform Format
        run: terraform fmt

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        env:
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
          TF_VAR_environment: ${{ github.event.inputs.environment || 'dev' }}
        run: terraform plan -out=tfplan

      - name: Upload Plan
        id: upload
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: ./tfplan

  apply:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.action == 'apply' && (github.event.inputs.apply_approval == 'true' || github.event.inputs.apply_approval == '') }}
    environment:
      name: ${{ github.event.inputs.environment }}
    steps:
      - name: Check if main branch for prod
        if: ${{ github.event.inputs.environment == 'prod' && github.ref != 'refs/heads/main' }}
        run: |
          echo "Deployment to prod is only allowed from the main branch."
          exit 1

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: ./tfplan

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        env:
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
          TF_VAR_environment: ${{ github.event.inputs.environment }}
        run: terraform init -reconfigure

      - name: Terraform Apply
        env:
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
          TF_VAR_environment: ${{ github.event.inputs.environment }}
        run: terraform apply -auto-approve tfplan/tfplan
